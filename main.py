import os
import telebot
from telebot import types

# === –ö–æ–Ω—Ñ—ñ–≥ —ñ–∑ ENV ===========================================================
BOT_TOKEN = os.getenv("BOT_TOKEN", "").strip()
ADMIN_CHAT_ID = int(os.getenv("ADMIN_CHAT_ID", "771906613"))
CHANNEL_USERNAME = os.getenv("CHANNEL_USERNAME", "@autohouse_te").strip()   # –ø—É–±–ª—ñ—á–Ω–∏–π @—é–∑–µ—Ä–Ω–µ–π–º –∫–∞–Ω–∞–ª—É
BOT_USERNAME = os.getenv("BOT_USERNAME", "AutoTernopil_bot").strip()         # —é–∑–µ—Ä–Ω–µ–π–º –±–æ—Ç–∞ –±–µ–∑ @

if not BOT_TOKEN:
    raise RuntimeError("BOT_TOKEN env is missing")

bot = telebot.TeleBot(BOT_TOKEN, parse_mode="HTML")

# === –ü—Ä–æ—Å—Ç—ñ "—Å—Ç–∞–Ω–∏" –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞ –¥–ª—è –∑–∞—è–≤–∫–∏ ==================================
user_state = {}  # user_id -> {"step": ..., "data": {...}}

def reset_state(uid):
    user_state[uid] = {"step": None, "data": {}}

# === –ö–ª–∞–≤—ñ–∞—Ç—É—Ä–∏ ==============================================================
def main_menu_kbd():
    kb = types.ReplyKeyboardMarkup(resize_keyboard=True)
    kb.row(types.KeyboardButton("üöó –ó—Ä–æ–±–∏—Ç–∏ –∑–∞–º–æ–≤–ª–µ–Ω–Ω—è"))
    kb.row(types.KeyboardButton("üìû –ö–æ–Ω—Ç–∞–∫—Ç–∏"), types.KeyboardButton("‚ÑπÔ∏è –î–æ–ø–æ–º–æ–≥–∞"))
    return kb

def share_phone_kbd():
    kb = types.ReplyKeyboardMarkup(resize_keyboard=True, one_time_keyboard=True)
    kb.row(types.KeyboardButton("üì≤ –ü–æ–¥—ñ–ª–∏—Ç–∏—Å—è —Ç–µ–ª–µ—Ñ–æ–Ω–æ–º", request_contact=True))
    kb.row(types.KeyboardButton("‚¨ÖÔ∏è –ù–∞–∑–∞–¥ —É –º–µ–Ω—é"))
    return kb

def order_button_inline():
    url = f"https://t.me/{BOT_USERNAME}?start=order"
    ikb = types.InlineKeyboardMarkup()
    ikb.add(types.InlineKeyboardButton("üìù –ó–∞–ª–∏—à–∏—Ç–∏ –∑–∞—è–≤–∫—É", url=url))
    return ikb

# === –ü–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è ============================================================
START_TEXT = """–ü—Ä–∏–≤—ñ—Ç! –¶–µ –±–æ—Ç <b>AutoHouse</b>.
–ü—ñ–¥–±–µ—Ä—É –∞–≤—Ç–æ –∑ –°–®–ê/–Ñ–≤—Ä–æ–ø–∏ –ø—ñ–¥ –∫–ª—é—á.

–ù–∞—Ç–∏—Å–Ω–∏ ¬´üöó –ó—Ä–æ–±–∏—Ç–∏ –∑–∞–º–æ–≤–ª–µ–Ω–Ω—è¬ª –∞–±–æ –∫–æ–º–∞–Ω–¥—É /order —â–æ–± –∑–∞–ª–∏—à–∏—Ç–∏ –∑–∞—è–≤–∫—É.
–¢–∞–∫–æ–∂ –º–æ–∂–µ—à —Å–∫–æ—Ä–∏—Å—Ç–∞—Ç–∏—Å—è –∫–Ω–æ–ø–∫–∞–º–∏ –Ω–∏–∂—á–µ."""
HELP_TEXT = """–Ø–∫ –ø—Ä–∞—Ü—é—î –±–æ—Ç:
‚Ä¢ ¬´üöó –ó—Ä–æ–±–∏—Ç–∏ –∑–∞–º–æ–≤–ª–µ–Ω–Ω—è¬ª ‚Äî –≤—ñ–¥–ø–æ–≤—ñ–¥–∞–π –Ω–∞ –∫—ñ–ª—å–∫–∞ –∑–∞–ø–∏—Ç–∞–Ω—å —ñ –∑–∞–ª–∏—à —Å–≤—ñ–π –Ω–æ–º–µ—Ä.
‚Ä¢ ¬´üìû –ö–æ–Ω—Ç–∞–∫—Ç–∏¬ª ‚Äî –Ω–∞—à —Ç–µ–ª–µ—Ñ–æ–Ω —ñ –ø–æ—Å–∏–ª–∞–Ω–Ω—è.
‚Ä¢ /post ‚Äî (—Ç—ñ–ª—å–∫–∏ –¥–ª—è –∞–¥–º—ñ–Ω–∞) –æ–ø—É–±–ª—ñ–∫—É–≤–∞—Ç–∏ –ø–æ—Å—Ç —É –∫–∞–Ω–∞–ª –∑ –∫–Ω–æ–ø–∫–æ—é ¬´–ó–∞–ª–∏—à–∏—Ç–∏ –∑–∞—è–≤–∫—É¬ª.
"""
CONTACTS_TEXT = """–ù–∞—à —Ç–µ–ª–µ—Ñ–æ–Ω: <b>+38 096 067 01 90</b>
–°–∞–π—Ç/Instagram/—ñ–Ω—à—ñ –ø–æ—Å–∏–ª–∞–Ω–Ω—è ‚Äî –Ω–∞–¥—ñ—à–ª—é –∑–∞ –∑–∞–ø–∏—Ç–æ–º."""

# === /start ==================================================================
@bot.message_handler(commands=["start"])
def cmd_start(message: types.Message):
    text = START_TEXT
    bot.send_message(message.chat.id, text, reply_markup=main_menu_kbd())
    reset_state(message.from_user.id)
    # –Ø–∫—â–æ –ø—Ä–∏–π—à–ª–∏ –∑ deep-link ?start=order ‚Äî –æ–¥—Ä–∞–∑—É –∑–∞–ø—É—Å–∫–∞—î–º–æ –∑–∞—è–≤–∫—É
    if message.text and "start order" in message.text.lower():
        start_order(message)

# === –ú–µ–Ω—é-–∫–Ω–æ–ø–∫–∏ =============================================================
@bot.message_handler(func=lambda m: m.text in ["üöó –ó—Ä–æ–±–∏—Ç–∏ –∑–∞–º–æ–≤–ª–µ–Ω–Ω—è", "üìû –ö–æ–Ω—Ç–∞–∫—Ç–∏", "‚ÑπÔ∏è –î–æ–ø–æ–º–æ–≥–∞"])
def menu_buttons(message: types.Message):
    if message.text == "üöó –ó—Ä–æ–±–∏—Ç–∏ –∑–∞–º–æ–≤–ª–µ–Ω–Ω—è":
        start_order(message)
    elif message.text == "üìû –ö–æ–Ω—Ç–∞–∫—Ç–∏":
        bot.send_message(message.chat.id, CONTACTS_TEXT, reply_markup=main_menu_kbd())
    else:
        bot.send_message(message.chat.id, HELP_TEXT, reply_markup=main_menu_kbd())

# === –ó–∞—è–≤–∫–∞: –∫—Ä–æ–∫ 1 ‚Äî –º–∞—Ä–∫–∞/–º–æ–¥–µ–ª—å ==========================================
def start_order(message: types.Message):
    uid = message.from_user.id
    user_state[uid] = {"step": "model", "data": {}}
    bot.send_message(message.chat.id, "–Ø–∫–∞ –º–∞—Ä–∫–∞/–º–æ–¥–µ–ª—å —Ü—ñ–∫–∞–≤–∏—Ç—å?", reply_markup=types.ReplyKeyboardRemove())

@bot.message_handler(func=lambda m: user_state.get(m.from_user.id, {}).get("step") == "model")
def order_step_model(message: types.Message):
    uid = message.from_user.id
    user_state[uid]["data"]["model"] = message.text.strip()
    user_state[uid]["step"] = "budget"
    bot.send_message(message.chat.id, "–Ø–∫–∏–π –±—é–¥–∂–µ—Ç (—É $)?")

# === –ö—Ä–æ–∫ 2 ‚Äî –±—é–¥–∂–µ—Ç =========================================================
@bot.message_handler(func=lambda m: user_state.get(m.from_user.id, {}).get("step") == "budget")
def order_step_budget(message: types.Message):
    uid = message.from_user.id
    user_state[uid]["data"]["budget"] = message.text.strip()
    user_state[uid]["step"] = "year"
    bot.send_message(message.chat.id, "–ë–∞–∂–∞–Ω–∏–π —Ä—ñ–∫ –≤–∏–ø—É—Å–∫—É?")

# === –ö—Ä–æ–∫ 3 ‚Äî —Ä—ñ–∫ ============================================================
@bot.message_handler(func=lambda m: user_state.get(m.from_user.id, {}).get("step") == "year")
def order_step_year(message: types.Message):
    uid = message.from_user.id
    user_state[uid]["data"]["year"] = message.text.strip()
    user_state[uid]["step"] = "phone"
    bot.send_message(
        message.chat.id,
        "–ó–∞–ª–∏—à –Ω–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω—É (–≤–≤–µ–¥–∏ —Ç–µ–∫—Å—Ç–æ–º) –∞–±–æ –Ω–∞—Ç–∏—Å–Ω–∏ –∫–Ω–æ–ø–∫—É –Ω–∏–∂—á–µ, —â–æ–± –ø–æ–¥—ñ–ª–∏—Ç–∏—Å—è –∫–æ–Ω—Ç–∞–∫—Ç–æ–º.",
        reply_markup=share_phone_kbd()
    )

# === –ö—Ä–æ–∫ 4 ‚Äî —Ç–µ–ª–µ—Ñ–æ–Ω ========================================================
@bot.message_handler(content_types=["contact"])
def order_step_phone_contact(message: types.Message):
    # —è–∫—â–æ –ø–æ–¥—ñ–ª–∏–ª–∏—Å—è –∫–æ–Ω—Ç–∞–∫—Ç–æ–º
    uid = message.from_user.id
    if user_state.get(uid, {}).get("step") != "phone":
        return
    phone = message.contact.phone_number
    finish_order(message, phone)

@bot.message_handler(func=lambda m: user_state.get(m.from_user.id, {}).get("step") == "phone")
def order_step_phone_text(message: types.Message):
    uid = message.from_user.id
    phone = message.text.strip()
    finish_order(message, phone)

def finish_order(message: types.Message, phone: str):
    uid = message.from_user.id
    data = user_state.get(uid, {}).get("data", {})
    data["phone"] = phone

    # –ü—ñ–¥—Ç–≤–µ—Ä–¥–∂–µ–Ω–Ω—è –∫–ª—ñ—î–Ω—Ç—É
    confirm = f"""‚úÖ –ó–∞–ø–∏—Ç –ø—Ä–∏–π–Ω—è—Ç–æ!

‚Ä¢ –ú–∞—Ä–∫–∞/–º–æ–¥–µ–ª—å: <b>{data.get('model','-')}</b>
‚Ä¢ –ë—é–¥–∂–µ—Ç: <b>{data.get('budget','-')}$</b>
‚Ä¢ –†—ñ–∫: <b>{data.get('year','-')}</b>
‚Ä¢ –¢–µ–ª–µ—Ñ–æ–Ω: <b>{data.get('phone','-')}</b>

–ú–∏ —Å–∫–æ—Ä–æ –∑–∞—Ç–µ–ª–µ—Ñ–æ–Ω—É—î–º–æ!
"""
    bot.send_message(message.chat.id, confirm, reply_markup=main_menu_kbd())

    # –ù–∞–¥—ñ—Å–ª–∞—Ç–∏ –≤ –∞–¥–º—ñ–Ω-—á–∞—Ç
    admin_msg = f"""üì© –ù–æ–≤–∞ –∑–∞—è–≤–∫–∞
–ö–æ—Ä–∏—Å—Ç—É–≤–∞—á: @{message.from_user.username or '‚Äî'} (id {message.from_user.id})
–ú–∞—Ä–∫–∞/–º–æ–¥–µ–ª—å: {data.get('model','-')}
–ë—é–¥–∂–µ—Ç: {data.get('budget','-')}$
–†—ñ–∫: {data.get('year','-')}
–¢–µ–ª–µ—Ñ–æ–Ω: {data.get('phone','-')}
"""
    try:
        bot.send_message(ADMIN_CHAT_ID, admin_msg)
    except Exception:
        pass

    reset_state(uid)

# === –ö–æ–º–∞–Ω–¥–∞ /order –ø—Ä—è–º–æ —Ç–µ–∫—Å—Ç–æ–º ============================================
@bot.message_handler(commands=["order"])
def cmd_order(message: types.Message):
    start_order(message)

# === –ü–æ—Å—Ç–∏ –≤ –∫–∞–Ω–∞–ª (—Ç—ñ–ª—å–∫–∏ –¥–ª—è –∞–¥–º—ñ–Ω–∞) =======================================
@bot.message_handler(commands=["post"])
def cmd_post(message: types.Message):
    if message.from_user.id != ADMIN_CHAT_ID:
        bot.reply_to(message, "–¶—è –∫–æ–º–∞–Ω–¥–∞ –ª–∏—à–µ –¥–ª—è –∞–¥–º—ñ–Ω—ñ—Å—Ç—Ä–∞—Ç–æ—Ä–∞.")
        return
    bot.reply_to(message, """–ù–∞–¥—ñ—à–ª–∏ <b>—Ñ–æ—Ç–æ –∑ –ø—ñ–¥–ø–∏—Å–æ–º</b> ‚Äî –æ–ø—É–±–ª—ñ–∫—É—é –≤ –∫–∞–Ω–∞–ª –∑ –∫–Ω–æ–ø–∫–æ—é ¬´–ó–∞–ª–∏—à–∏—Ç–∏ –∑–∞—è–≤–∫—É¬ª.
(–ü—ñ–¥–ø–∏—Å ‚Äî —Ü–µ —Ç–µ–∫—Å—Ç –ø—ñ–¥ —Ñ–æ—Ç–æ).""")

@bot.message_handler(content_types=["photo"])
def handle_admin_photo(message:
